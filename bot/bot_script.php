<?php

// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
require_once __DIR__ . '/helper.php';
require_once __DIR__ . '/dictionaries.php';

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
loadEnv(__DIR__ . '/.env');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (getenv('ENVIRONMENT') === 'development') {
    // –í–∫–ª—é—á–∞–µ–º –≤—ã–≤–æ–¥ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    ini_set('log_errors', 1);
    ini_set('error_log', '/path/to/error.log'); // –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å, –∫—É–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–æ–≥ –æ—à–∏–±–æ–∫
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
$token = getenv('BOT_TOKEN');
$bot_name = getenv('BOT_NAME');
$allowed_user_id = getenv('ADMIN_USER_ID'); // USER_ID –∞–¥–º–∏–Ω–∞
$game_state_file = __DIR__ . '/storage_game_state.json'; // —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
$riddles_file = __DIR__ . '/storage_riddles.json'; // —Ñ–∞–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥–∞–¥–æ–∫
$allowed_commands = ['/stats', '/hint', '/rules']; // –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
$admin_commands = ['/start', '/end', '/add', '/del', '/list'];  // –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –∞–¥–º–∏–Ω–∞
$riddles = loadRiddles(); // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≥–∞–¥–æ–∫ –∏–∑ JSON-—Ñ–∞–π–ª–∞
// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$use_webhook = getenv('USE_WEBHOOK') === 'true';// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ true –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–µ–±—Ö—É–∫–∞, false –¥–ª—è –ø–æ–ª–ª–∏–Ω–≥–∞

logs('–°—Ç–∞—Ä—Ç –±–æ—Ç–∞');
logs("–¢–µ–∫—É—â–∏–π —Ä–∞–±–æ—á–∏–π –∫–∞—Ç–∞–ª–æ–≥: " . getcwd());

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
initializeGameState(); // –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç—É—Ç, –∏–Ω–∞—á–µ –Ω–µ —É—Å–ø–µ–µ—Ç –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å –¥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥

// –û–±—Ä–∞–±–æ—Ç–∫–∞, –∫–∞–∫–∏–º –º–µ—Ç–æ–¥–æ–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞—à –±–æ—Ç
if ($use_webhook) {
    logs('–†–µ–∂–∏–º WebHook');
    // –†–µ–∂–∏–º –≤–µ–±—Ö—É–∫–∞
    $update = json_decode(file_get_contents('php://input'), true);
    handleUpdate($update);
} else {
    logs('–†–µ–∂–∏–º Polling');

    $offset = 0;
    while (true) {
        $updates = file_get_contents("https://api.telegram.org/bot$token/getUpdates?offset=$offset&limit=1");
        $updates = json_decode($updates, true);

        if (isset($updates['result'][0])) {
            $update = $updates['result'][0];
            $offset = $update['update_id'] + 1;
            handleUpdate($update);
        }

        sleep(2);
    }
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
function initializeGameState(): void
{
    global $gameState, $game_state_file;

    if (!file_exists($game_state_file)) {
        $gameState = [
            'active' => false,
            'current_emoji' => '',
            'solved_riddles' => [],
            'guessed_words' => [],
            'score' => [],
            'usernames' => [],
            'guessed_words_per_player' => []
        ];
        if (file_put_contents($game_state_file, json_encode($gameState)) === false) {
            error_log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª: $game_state_file");
        }
    } else { // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
        $gameState = json_decode(file_get_contents($game_state_file), true);
    }
    // –í –Ω–∞—á–∞–ª–µ —Å–∫—Ä–∏–ø—Ç–∞, –ø–æ—Å–ª–µ initializeGameState():
    logs("–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " . json_encode($gameState));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
function sendMessage($chat_id, $text): void
{
    global $token;
    file_get_contents("https://api.telegram.org/bot$token/sendMessage?chat_id=$chat_id&text=" . urlencode($text));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
function handleUpdate($update): void
{
    global $bot_name;

    logs(print_r($update, JSON_UNESCAPED_UNICODE),);

    if (!isset($update['message']['chat']['id'])) { // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ID —á–∞—Ç–∞
        logs('Hello bot!');
        return;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    $chat_id = $update['message']['chat']['id']; // ID —á–∞—Ç–∞

    if (!isset($update['message']['text'])) {
        sendMessage($chat_id, "–ò–∑–≤–∏–Ω–∏, –Ω–æ —è –Ω–µ —É–º–µ—é —á–∏—Ç–∞—Ç—å –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫... –æ—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ —Å—Ç—Ä–æ–∫ –Ω–µ—Ç! ü§ìü§∑‚Äç‚ôÇÔ∏è");
        return;
    }
    $message = $update['message']['text']; // –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    $user_id = $update['message']['from']['id'];
    $first_name = $update['message']['from']['first_name'] ?? '';
    $last_name = $update['message']['from']['last_name'] ?? '';
    $username = $first_name . ($last_name ? ' ' . $last_name : '');
    if (empty($username)) {
        $username = $update['message']['from']['username'] ?? '–ê–Ω–æ–Ω–∏–º ';
    }

    if (isAllowedCommand($message, $user_id, $chat_id)) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        $response_text = command_processing($message, $username, $chat_id, $user_id);
    } // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–æ—Ç—É –∏–ª–∏ —è–≤–ª—è—é—â–∏—Ö—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    elseif (!empty($message) &&
        (str_starts_with($message, $bot_name) ||
            isset($update['message']['reply_to_message']['from']['username'])
            && $update['message']['reply_to_message']['from']['username'] === strtolower(trim($bot_name, '@')))) {
        $message = trim(str_replace($bot_name, '', $message)); // –£–¥–∞–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –±–æ—Ç–∞
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        $response_text = message_processing($message, $username, $chat_id, $user_id);
    }

    $response_text = $response_text ?? '';

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logs("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: $message");
    logs("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç: $response_text");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä—ã
function getStats($gameState): string
{
    global $statsJokes, $riddles;

    $totalRiddles = count($riddles);
    $solvedRiddles = isset($gameState['solved_riddles']) ? count($gameState['solved_riddles']) : 0;

    $stats = $statsJokes[array_rand($statsJokes)] . PHP_EOL . PHP_EOL;
    $stats .= "–û—Ç–≥–∞–¥–∞–Ω–æ –∑–∞–≥–∞–¥–æ–∫: $solvedRiddles –∏–∑ $totalRiddles" . PHP_EOL . PHP_EOL;

    if (empty($gameState['score'])) {
        return $stats . "–°—á–µ—Ç –ø–æ–∫–∞ 0:0. –î–∞–∂–µ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–µ –º–∞—Ç—á–∏ –±—ã–≤–∞—é—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ! ‚öΩüòÖ";
    }

    arsort($gameState['score']); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –æ—á–∫–∞–º (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    foreach ($gameState['score'] as $userId => $score) {
        $username = $gameState['usernames'][$userId] ?? '–ê–Ω–æ–Ω–∏–º';
        $stats .= "$username: $score –æ—á–∫–æ–≤" . PHP_EOL;
    }
    return $stats;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã
function getRules(): string
{
    return "üéÆ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:" . PHP_EOL
        . "1Ô∏è‚É£ –ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ñ–∞–∫—Ç –æ –Ω–∞—à–µ–π –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π –î–∞—à–µ–Ω—å–∫–µ." . PHP_EOL
        . "2Ô∏è‚É£ –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - —É–≥–∞–¥–∞—Ç—å, –∫–∞–∫–æ–π —Ñ–∞–∫—Ç –æ–∑–Ω–∞—á–∞–µ—Ç —ç—Ç–æ—Ç —ç–º–æ–¥–∑–∏." . PHP_EOL
        . "3Ô∏è‚É£ –ó–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 5 –±–∞–ª–ª–æ–≤." . PHP_EOL
        . "4Ô∏è‚É£ –ó–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 2 –±–∞–ª–ª–∞." . PHP_EOL
        . "5Ô∏è‚É£ –ü—Ä–∏ —É–≥–∞–¥—ã–≤–∞–Ω–∏–∏ –ø–æ —Å–ª–æ–≤–∞–º –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –Ω–µ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —É–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ –æ–¥–Ω—É –∑–∞–≥–∞–¥–∫—É." . PHP_EOL
        . "6Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /hint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏, –Ω–æ —ç—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å –≤–∞–º 1 –±–∞–ª–ª." . PHP_EOL
        . "7Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /stats, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç –∏–≥—Ä–æ–∫–æ–≤." . PHP_EOL
        . "8Ô∏è‚É£ –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –ø–æ–∫–∞ –Ω–µ –±—É–¥—É—Ç –æ—Ç–≥–∞–¥–∞–Ω—ã –≤—Å–µ –∑–∞–≥–∞–¥–∫–∏." . PHP_EOL
        . "9Ô∏è‚É£ –¶–µ—Ä–µ–º–æ–Ω–∏—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π –ø–µ—Ä–≤—ã—Ö —Ç—Ä–µ—Ö –º–µ—Å—Ç –≤–∞—Å –∂–¥–µ—Ç –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–µ (–Ω—É –∏–ª–∏ –æ–Ω–∞ –ø–æ–∑–∂–µ –≤–∞—Å –Ω–∞—Å—Ç–∏–≥–Ω–µ—Ç)." . PHP_EOL
        . "üîü –ï—Å–ª–∏ –≤—ã –±—É–¥–µ—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã, –±–æ—Ç –±—É–¥–µ—Ç –ø–æ–¥–∫–∏–¥—ã–≤–∞—Ç—å –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –î–∞—à–µ, –æ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –∏ –Ω–µ –∑–Ω–∞–ª–∏." . PHP_EOL
        . PHP_EOL
        . "–£–¥–∞—á–∏ –∏ –≤–µ—Å–µ–ª–æ–π –∏–≥—Ä—ã! üçÄüòä";
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏
function getHint($answer): string
{
    $words = explode(' ', $answer);
    $randomWord = $words[array_rand($words)];
    return mb_strtoupper(mb_substr($randomWord, 0, 1, 'UTF-8'), 'UTF-8');
}

// —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
function isAllowedCommand($message, $user_id, $chat_id): bool
{
    global $allowed_commands, $admin_commands, $allowed_user_id;

    // –£–¥–∞–ª—è–µ–º @username_bot –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    $command = preg_replace('/@\w+bot$/', '', $message);

    // –†–∞–∑–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    $parts = explode(' ', $command, 2);
    $command = strtolower($parts[0]);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (in_array($command, $allowed_commands)) {
        return true;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if (in_array($command, $admin_commands)) {
        if ($user_id === (int)$allowed_user_id) {
            return true;
        }else{
            sendMessage($chat_id, "–ó—Ä—è —Å—Ç–∞—Ä–∞–µ—à—å—Å—è. –¢–∞–∫–∏–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –Ω–µ —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å, –Ω–µ —Ç–≤–æ–π —Ä–∞–Ω–≥. –ú–Ω–µ –Ω–µ—á–µ–≥–æ —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å, –º–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫. –¢–æ–ª—å–∫–æ —Å–æ–ª—å –∏ –ø–µ—Ä–µ—Ü.");
        }
    }

    return false;
}


// –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
function extractCommand($message): string
{
    // –£–¥–∞–ª—è–µ–º @username_bot –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    $command = preg_replace('/@\w+bot$/', '', $message);

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ (–∫–æ–º–∞–Ω–¥—É) –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    $parts = explode(' ', $command, 2);
    return strtolower($parts[0]);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
function command_processing($message, $username, $chat_id, $user_id): string
{
    global $riddles, $gameState, $hintJokes, $game_state_file;
    $username = $username ?? '';
    $message = $message ?? '';

    $command = extractCommand($message);

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if ($command == '/stats') {
        $response_text = getStats($gameState) . PHP_EOL ;;
    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∞–≤–∏–ª
    elseif ($command == '/rules') {
        $response_text = getRules() . PHP_EOL ;;
    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏
    elseif ($command == '/hint') {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –∏–≥—Ä–∞
        if (!isset($gameState['active']) || !$gameState['active']) {
            $response_text = "–ò–≥—Ä–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å!üòâ";
        } else {
            $currentScore = updateScore($gameState, $user_id, -1, $username);
            if ($currentScore >= 0) { // –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –±–∞–ª–ª—ã –Ω–∞ –ø–æ–¥—Å–∫–∞–∑–∫—É
                $hint = getHint($riddles[$gameState['current_emoji']]);
                $joke = $hintJokes[array_rand($hintJokes)];
                $response_text = "$username, $joke\n–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–ª–æ–≤–æ –Ω–∞ –±—É–∫–≤—É '$hint'\n–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç: $currentScore";
                file_put_contents($game_state_file, json_encode($gameState));
            } else {
                updateScore($gameState, $user_id, 1, $username); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–ª–ª –æ–±—Ä–∞—Ç–Ω–æ
                $response_text = "$username, —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π —É–≥–∞–¥—ã–≤–∞—Ç—å!";
            }
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    elseif ($command == '/start') {

        if (empty($riddles)) {
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —Å–ø–∏—Å–æ–∫ –∑–∞–≥–∞–¥–æ–∫ –ø—É—Å—Ç. –ò–≥—Ä—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –∑–∞–≥–∞–¥–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add";
        }

        if (($gameState['active'] ?? '') === 'active') {
            return "–ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /end, —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É.";
        }

        $gameState = [
            'active' => true,
            'current_emoji' => array_rand($riddles),
            'solved_riddles' => [],
            'guessed_words' => [],
            'score' => [],
            'usernames' => []
        ];

        $response_text = "–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! üéâ" . PHP_EOL
            . "–í–æ—Ç –ø–µ—Ä–≤–∞—è –∑–∞–≥–∞–¥–∫–∞:"
            . $gameState['current_emoji'] . PHP_EOL
            . PHP_EOL
            . PHP_EOL
            . "–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /rules" . PHP_EOL;
        file_put_contents($game_state_file, json_encode($gameState));
    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
    elseif ($command == '/end') {
        $gameState['active'] = false;
        $response_text = "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!";
        file_put_contents($game_state_file, json_encode($gameState));
    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥–∞–¥–∫–∏ /add [—ç–º–æ–¥–∑–∏] [—Ñ–∞–∫—Ç]
    elseif (str_starts_with($message, '/add')) {
        $parts = preg_split('/\s+/', $message, 3);
        if (count($parts) === 3) {
            $emoji = trim($parts[1]);
            $fact = trim($parts[2]);

            // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —ç–º–æ–¥–∑–∏
            if (preg_match('/^[\x{1F000}-\x{1FFFF}\x{2600}-\x{26FF}\x{2700}-\x{27BF}]+$/u', $emoji)) {
                addRiddle($emoji, $fact);
                $response_text = "–ó–∞–≥–∞–¥–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!";
            } else {
                $response_text = "–û—à–∏–±–∫–∞: –∫–ª—é—á –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —ç–º–æ–¥–∑–∏.";
            }
        } else {
            $response_text = "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /add [—ç–º–æ–¥–∑–∏] [—Ñ–∞–∫—Ç]" . PHP_EOL .
                "–ù–∞–ø—Ä–∏–º–µ—Ä: /add üçé –≠—Ç–æ—Ç —Ñ—Ä—É–∫—Ç —á–∞—Å—Ç–æ –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Å –∫–æ–º–ø–∞–Ω–∏–µ–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–π –°—Ç–∏–≤–æ–º –î–∂–æ–±—Å–æ–º" . PHP_EOL .
                "–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–º–æ–¥–∑–∏: /add üåûüå°Ô∏è –≠—Ç–æ —è–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç–æ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è –≤ –ø—É—Å—Ç—ã–Ω—è—Ö.";
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    elseif (str_starts_with($message, '/del')) {
        $parts = explode(' ', $message, 2);
        if (count($parts) === 2) {
            if (deleteRiddle($parts[1])) {
                $response_text = "–ó–∞–≥–∞–¥–∫–∞ —É–¥–∞–ª–µ–Ω–∞!";
            } else {
                $response_text = "–ó–∞–≥–∞–¥–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.";
            }
        } else {
            $response_text = "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /del [—ç–º–æ–¥–∑–∏]";
        }

    }

    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–≥–∞–¥–æ–∫
    elseif ($message === '/list') {
        $response_text = listRiddles();
    }

    $response_text = $response_text ?? $username  . PHP_EOL . "–£ –º–µ–Ω—è –Ω–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã üòï";

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    sendMessage($chat_id, $response_text);

    return $response_text;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç–∞ –∏–≥—Ä–æ–∫–∞
function updateScore(&$gameState, $userId, $points, $username) {
    global $game_state_file;

    if (!isset($gameState['score'][$userId])) {
        $gameState['score'][$userId] = 0;
        $gameState['usernames'][$userId] = $username;
    }
    $gameState['score'][$userId] += $points;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    file_put_contents($game_state_file, json_encode($gameState));

    return $gameState['score'][$userId];
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function message_processing($message, $username, $chat_id, $user_id): string
{
    global $gameState, $riddles, $correctGuessJokes, $partialGuessJokes, $wrongGuessJokes, $game_state_file;
    $username = $username ?? '';
    $message = $message ?? '';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö –∑–∞–≥–∞–¥–æ–∫, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    if (!isset($gameState['solved_riddles'])) {
        $gameState['solved_riddles'] = [];
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    if (!isset($gameState['guessed_words'])) {
        $gameState['guessed_words'] = [];
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –∏–≥—Ä–∞
    if (!$gameState['active']) {
        sendMessage($chat_id, '–ò–≥—Ä–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å!ü•≤');
        return '–ò–≥—Ä–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å!ü•≤';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –æ—Ç–≤–µ—Ç–∞ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
    $correctAnswer = mb_strtolower($riddles[$gameState['current_emoji']], 'UTF-8');
    $userAnswer = mb_strtolower($message, 'UTF-8');

    if ($userAnswer == $correctAnswer) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –∏ –≤—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π —à—É—Ç–∫–∏
        $currentScore = updateScore($gameState, $user_id, 5, $username);
        $joke = $correctGuessJokes[array_rand($correctGuessJokes)];
        $response_text = "$username, $joke –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ \"$correctAnswer\". "
            . PHP_EOL . " –¢—ã –ø–æ–ª—É—á–∞–µ—à—å 5 –±–∞–ª–ª–æ–≤! –¢–≤–æ–π —Å—á–µ—Ç: $currentScore" . PHP_EOL;

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–≥–∞–¥–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–µ—à–µ–Ω–Ω—ã—Ö
        $gameState['solved_riddles'][] = $gameState['current_emoji'];

        // –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—É—é –∑–∞–≥–∞–¥–∫—É –∏–∑ –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã—Ö
        $unsolved_riddles = array_diff(array_keys($riddles), $gameState['solved_riddles']);

        // –ï—Å–ª–∏ –≤—Å–µ –∑–∞–≥–∞–¥–∫–∏ —Ä–µ—à–µ–Ω—ã, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –∏–≥—Ä—É
        if (empty($unsolved_riddles)) {
            return endGame($chat_id);
        }

        $gameState['current_emoji'] = $unsolved_riddles[array_rand($unsolved_riddles)];
        $gameState['guessed_words'] = []; // –°–±—Ä–æ—Å —É–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–≥–∞–¥–∫–∏
        $response_text .= PHP_EOL . "–°–ª–µ–¥—É—é—â–∞—è –∑–∞–≥–∞–¥–∫–∞: " . $gameState['current_emoji'];
    }
    else { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        // –†–∞–∑–±–∏–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–ª–æ–≤–∞
        $words = explode(' ', $correctAnswer);
        $userWords = explode(' ', $userAnswer);

        // –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤
        $correctGuessedWords = array_intersect($words, $userWords);

        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —É–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤
        $newGuessedWords = array_diff($correctGuessedWords, $gameState['guessed_words']);

        if (!empty($newGuessedWords)) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–≥–∞–¥–∞–ª –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π –∑–∞–≥–∞–¥–∫–µ
            if (!isset($gameState['guessed_words_per_player'][$user_id])) {
                $gameState['guessed_words_per_player'][$user_id] = [];
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–≥–∞–¥—ã–≤–∞–ª –ª–∏ —É–∂–µ –∏–≥—Ä–æ–∫ —Å–ª–æ–≤–æ –≤ —Ç–µ–∫—É—â–µ–π –∑–∞–≥–∞–¥–∫–µ
            if (!in_array($gameState['current_emoji'], $gameState['guessed_words_per_player'][$user_id])) {
                $word = reset($newGuessedWords); // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ
                $points = 2;
                $currentScore = updateScore($gameState, $user_id, $points, $username);
                $joke = $partialGuessJokes[array_rand($partialGuessJokes)];
                $response_text = "$username, $joke " . PHP_EOL . "–¢—ã —É–≥–∞–¥–∞–ª(–∞) —Å–ª–æ–≤–æ: $word. "
                    . PHP_EOL . "–ü–æ–ª—É—á–∞–µ—à—å $points –±–∞–ª–ª–∞! "
                    . PHP_EOL . "–¢–≤–æ–π —Å—á–µ—Ç: $currentScore" . PHP_EOL;

                $gameState['guessed_words'][] = $word;
                $gameState['guessed_words_per_player'][$user_id][] = $gameState['current_emoji'];

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —Å–ª–æ–≤–∞ –æ—Ç–≥–∞–¥–∞–Ω—ã
                if (count($gameState['guessed_words']) == count($words)) {
                    // –í—Å–µ —Å–ª–æ–≤–∞ –æ—Ç–≥–∞–¥–∞–Ω—ã, —Å—á–∏—Ç–∞–µ–º –∑–∞–≥–∞–¥–∫—É –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–≥–∞–¥–∞–Ω–Ω–æ–π
                    $gameState['solved_riddles'][] = $gameState['current_emoji'];
                    $response_text .= "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–≥–∞–¥–∞–ª–∏ –∑–∞–≥–∞–¥–∫—É: \"$correctAnswer\"." . PHP_EOL;

                    // –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—É—é –∑–∞–≥–∞–¥–∫—É –∏–∑ –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã—Ö
                    $unsolved_riddles = array_diff(array_keys($riddles), $gameState['solved_riddles']);

                    // –ï—Å–ª–∏ –≤—Å–µ –∑–∞–≥–∞–¥–∫–∏ —Ä–µ—à–µ–Ω—ã, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –∏–≥—Ä—É
                    if (empty($unsolved_riddles)) {
                        return endGame($chat_id);
                    }

                    $gameState['current_emoji'] = $unsolved_riddles[array_rand($unsolved_riddles)];
                    $gameState['guessed_words'] = []; // –°–±—Ä–æ—Å —É–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–≥–∞–¥–∫–∏
                    $gameState['guessed_words_per_player'] = []; // –°–±—Ä–æ—Å —É–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤ –Ω–∞ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–≥–∞–¥–∫–∏

                    $response_text .= "–°–ª–µ–¥—É—é—â–∞—è –∑–∞–≥–∞–¥–∫–∞: " . $gameState['current_emoji'];
                } else {
                    $response_text .= "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É–≥–∞–¥—ã–≤–∞—Ç—å!üí™üèª"
                        . PHP_EOL . "–ï—â–µ –µ—Å—Ç—å –Ω–µ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ üòú";
                }
            } else {
                $response_text = "$username, —Ç—ã —É–∂–µ —É–≥–∞–¥–∞–ª(–∞) —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π –∑–∞–≥–∞–¥–∫–µ. –î–∞–π —à–∞–Ω—Å –¥—Ä—É–≥–∏–º! üòâ";
            }
        } else {
            // –ï—Å–ª–∏ –Ω–æ–≤—ã—Ö —É–≥–∞–¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤ –Ω–µ—Ç
            $joke = $wrongGuessJokes[array_rand($wrongGuessJokes)];
            $response_text = "$username, $joke " . PHP_EOL . "–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!";
        }

    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
    file_put_contents($game_state_file, json_encode($gameState));

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    sendMessage($chat_id, $response_text);

    return $response_text;
}

// –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã
function endGame($chat_id): string
{
    global $gameState;

    $gameState['active'] = false;

    $response_text = "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—Å–µ –∑–∞–≥–∞–¥–∫–∏ —Ä–∞–∑–≥–∞–¥–∞–Ω—ã! üéâ" . PHP_EOL . PHP_EOL;
    $response_text .= "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤:" . PHP_EOL;

    arsort($gameState['score']); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –æ—á–∫–∞–º (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    foreach ($gameState['score'] as $userId => $score) {
        $username = $gameState['usernames'][$userId] ?? '–ê–Ω–æ–Ω–∏–º';
        $response_text .= "$username: $score –æ—á–∫–æ–≤" . PHP_EOL;
    }

    $response_text .= PHP_EOL . "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.";

    sendMessage($chat_id, $response_text);

    return $response_text;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≥–∞–¥–æ–∫ –∏–∑ JSON-—Ñ–∞–π–ª–∞
function loadRiddles() {
    global $riddles_file;
    if (file_exists($riddles_file)) {
        $content = file_get_contents($riddles_file);
        return json_decode($content, true);
    }
    return [];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥–∞–¥–æ–∫ –≤ JSON-—Ñ–∞–π–ª
function saveRiddles($riddles): void
{
    global $riddles_file;
    if (file_put_contents($riddles_file, json_encode($riddles, JSON_PRETTY_PRINT)) === false) {
        error_log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª: $riddles_file");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–≥–∞–¥–∫–∏
function addRiddle($emoji, $fact): void
{
    $riddles = loadRiddles();
    $riddles[$emoji] = $fact;
    saveRiddles($riddles);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≥–∞–¥–∫–∏
function deleteRiddle($emoji): bool
{
    $riddles = loadRiddles();
    if (isset($riddles[$emoji])) {
        unset($riddles[$emoji]);
        saveRiddles($riddles);
        return true;
    }
    return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∑–∞–≥–∞–¥–æ–∫
function listRiddles(): string
{
    $riddles = loadRiddles();
    $list = "–°–ø–∏—Å–æ–∫ –∑–∞–≥–∞–¥–æ–∫:\n\n";
    foreach ($riddles as $emoji => $fact) {
        $list .= "$emoji - $fact\n";
    }
    return $list;
}
